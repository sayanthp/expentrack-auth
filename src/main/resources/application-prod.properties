spring.application.name=auth-service

# Server Configuration
server.port=8082

# Database Configuration
spring.datasource.url=jdbc:postgresql://${AWS_RDS_ENDPOINT}:5432/${AWS_RDS_DB_NAME}
spring.datasource.username=${AWS_RDS_USERNAME}
spring.datasource.password=${AWS_RDS_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=3600000

# Eureka Client Configuration
eureka.client.service-url.defaultZone=http://${EUREKA_SERVER_HOST}:8761/eureka/
eureka.instance.prefer-ip=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.health-check-url-path=/actuator/health
eureka.instance.status-page-url-path=/actuator/info
spring.cloud.discovery.enabled=true
eureka.instance.hostname=${INSTANCE_HOSTNAME}

# Logging Configuration
logging.level.root=WARN
logging.level.org.springframework=INFO
logging.file.name=/var/log/auth-service.log
logging.level.org.springframework.security=WARN

# CORS Configuration for Spring Cloud Gateway
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=${ALLOWED_ORIGINS}
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true